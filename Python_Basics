# More on Data Frame

#import dataframe as df
#To see number of rows and cols
print(dataset.shape)
print(df.shape)
df.count()
#To see number of col
len(df.columns)

# To see the top 5 rows of csv data 
!head -n 5 filename.csv

# Inspection of the DataFrame,  getting basic information about your DataFrame -- 
1.info()  --- no of columns, rows, ram uses
dataframename.info()
2. dtypes  --- data types of the columns
dataframe.dtypes
3. describe() -- seeing basic statistics about the dataset's numeric columns. 
dataframename.describes()
Be careful though, since this will return information on all columns of a numeric datatype.
4. head() -- by default, head displays the first five records of the dataset, while tail displays the last five.
dataframename.head()
5. tail()
dataframename.tail()

# Selecting the DataFrame operations
You can think of a DataFrame as a group of Series that share an index (in this case the column headers). 
This makes it easy to select specific columns.
Selecting a single column from the DataFrame will return a Series object.

#  Using iloc, loc, & ix to select rows and columns in Pandas DataFrames
hit this link- https://www.shanelynn.ie/select-pandas-dataframe-rows-and-columns-using-iloc-loc-and-ix/


#Install python packages in ipython
!pip install packages_name

#Install python Packages from console
pip install packages_name

#Install packages in Anconda
conda update scikit-learn
conda install scikit-learn


#Install packages in python3 in ubuntu16.04 which comes bundle with python2.7
step1:- pip for python3
sudo apt-get install python3-pip
Step2:-use pip3 to intall packages(it install the packages in this dir "/usr/local/lib/python3.5/dist-packages")
sudo pip3 install sklearn


#Use packages in spider3 
Step1:- follow above 1 to 3 steps to install pip3 and packages. 
Step2:- go to tool menu of spider3 ->PYTHONPATH manager -> add path "/usr/local/lib/python3.5/dist-packages/sklearn"
Step3:- Hit Update Module list in the tool menu
Step4:- Restart Spyder
# Spider Inspector Object
See package rope is install

# Python Functions details with Example
First, since there's no typing, you don't have to set your return type.
Second, you don't have to use a return statement at all actually.
There's a special value called None that's returned.
None is similar to null in Java and represents the absence of value. 
Third, in Python, you can have default values for parameters.
All of the optional parameters, the ones that you got default values for, need to come at the end of the function declaration.
Sample 1:-
def do_math(a, b, kind = 'add'):
  if (kind=='add'):
    return a+b
  else:
    return a-b

do_math(1, 2)

Sample 2:-





